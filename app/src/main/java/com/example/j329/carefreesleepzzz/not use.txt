package com.example.j329.carefreesleepzzz;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.TimePickerDialog;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.media.AudioAttributes;
import android.media.SoundPool;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.Toast;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import static android.content.Context.ALARM_SERVICE;

public class Mainmenu extends AppCompatActivity {

    //アラームの主キーとなる部分 db用変数名と被りを回避するため_を挿入
    int _alarmId = -1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_mainmenu);

        /*
        //ここからリスナー関連
        HelloListener listener = new HelloListener();

        Button bt_sleep  = findViewById(R.id.bt_sleep); //ここでスリープボタンに遷移するリスナーを記述
        bt_sleep.setOnClickListener(listener);

        Button bt_wakeup = findViewById(R.id.bt_wakeup);//起きるボタンが押された時の処理
        bt_wakeup.setOnClickListener(listener);

        Button bt_configs = findViewById(R.id.bt_configs);//設定ボタンが押された時の処理
        bt_configs.setOnClickListener(listener);*/


        findViewById(R.id.sleep).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                timeConf(mhours(), mminutes());
            }
        });
    }
    //時を取得
    private String mhours(){
        EditText Ehour=(EditText)this.findViewById(R.id.hour);
        String hour = Ehour.getText().toString();
        return hour;
    }
    //分を取得
    private String mminutes(){
        EditText Eminute=(EditText)this.findViewById(R.id.minute);
        String minute = Eminute.getText().toString();
        return minute;
    }
    //設定した時刻を表示
    private void timeConf(String h, String m){
        TextView confview=(TextView)this.findViewById(R.id.confview);
        confview.setText("設定した時間は　" + h + "：" + m);
    }
    public void timerSet(Calendar calendar){//実行するサービスを指定
        Intent intent = new Intent(getApplicationContext(), Pleaseworksomething.class);
        Context ct = getApplication();
        PendingIntent pendingIntent = PendingIntent.getService(ct, 0,
                intent, PendingIntent.FLAG_UPDATE_CURRENT);
        // AlarmManager の設定・開始
        AlarmManager am = (AlarmManager)getSystemService(Context.ALARM_SERVICE);
        am.set(AlarmManager.RTC_WAKEUP,calendar.getTimeInMillis(),pendingIntent);
    }
}

/*private class HelloListener implements View.OnClickListener { //ここでスリープボタン画面遷移のプログラム

        @Override
        public void onClick(View view) {
            final int id = view.getId();

            switch (id) {
                case R.id.sleep:
                    timeConf(mhours(), mminutes());
                    //時を取得
                    private String mhours() {
                        EditText Ehour = (EditText) this.findViewById(R.id.hour);
                        String hour = Ehour.getText().toString();
                        return hour;
                    }
                //分を取得
                private String mminutes() {
                    EditText Eminute = (EditText) this.findViewById(R.id.minute);
                    String minute = Eminute.getText().toString();
                    return minute;
                }

                //設定した時刻を表示
                private void timeConf(String h, String m){
                    TextView confview=(TextView)this.findViewById(R.id.confview);
                    confview.setText("設定した時間は　" + h + "：" + m);
                }
                break;
                case R.id.bt_sleep:
                    Intent intent = new Intent(Mainmenu.this, Sleepchecker.class); //１個目は遷移元、２個目は遷移先
                    startActivity(intent);
                    break;
                case R.id.bt_wakeup:
                    //Intent intent2 = new Intent(Mainmenu.this, Wakeup.class); //１個目は遷移元、２個目は遷移先 dead
                    Intent intent2 = new Intent(Mainmenu.this, notWakeup.class); //１個目は遷移元、２個目は遷移先
                    startActivity(intent2);
                    break;
                case R.id.bt_configs:
                    Intent intent3 = new Intent(Mainmenu.this, Configs.class); //１個目は遷移元、２個目は遷移先
                    startActivity(intent3);
                    break;
                default:
                    throw new IllegalStateException("Unexpected value: " + id);
            }
        }
    }
}
 */
