package com.example.j329.carefreesleepzzz;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.TimePickerDialog;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.media.AudioAttributes;
import android.media.SoundPool;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.Toast;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class Mainmenu extends AppCompatActivity {

    private SoundPool soundPool;
    private int Alarm;

    //アラームの主キーとなる部分 db用変数名と被りを回避するため_を挿入
    int _alarmId = -1;
    //時間をデータベースに保存するための初期宣言
    /*int _hour = 0;
    int _min = 0;*/

    //int sethour;
    //int setminute;

    String sethour;
    String setminute;


    /*DatabaseHelper helper = new DatabaseHelper(Mainmenu.this);
    private SQLiteDatabase db; //privateって付けたら動くマジックない？*/

    Calendar calendar = Calendar.getInstance();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_mainmenu);

        //ここから音関連

        AudioAttributes audioAttributes = new AudioAttributes.Builder()
                .setUsage(AudioAttributes.USAGE_ALARM)
                .setContentType(AudioAttributes.CONTENT_TYPE_SPEECH)
                .build();

        soundPool = new SoundPool.Builder()
                .setAudioAttributes(audioAttributes)
                //ストリーム数を指定
                .setMaxStreams(1)
                .build();

        Alarm = soundPool.load(this, R.raw.alarm1, 1); //Alarmに音源を定義する

        soundPool.setOnLoadCompleteListener(new SoundPool.OnLoadCompleteListener() {
            @Override
            public void onLoadComplete(SoundPool Alarm, int sampleId, int status) {
                Log.d("debug","sampleId="+sampleId);
                Log.d("debug","status="+status);
            }
        }); //2/2 このよくわからんonloadについて調べるのとDB＆通知機能 構築 その後set timerについて考える？

        //ここからリスナー関連
        Button sleep = findViewById(R.id.sleep); //寝るボタンが押されたとき
        HelloListener listener = new HelloListener();
        sleep.setOnClickListener(listener);

        Button bt_sleep  = findViewById(R.id.bt_sleep); //ここでスリープボタンに遷移するリスナーを記述
        bt_sleep.setOnClickListener(listener);

        Button bt_wakeup = findViewById(R.id.bt_wakeup);//起きるボタンが押された時の処理
        bt_wakeup.setOnClickListener(listener);

        Button bt_configs = findViewById(R.id.bt_configs);//設定ボタンが押された時の処理
        bt_configs.setOnClickListener(listener);

    }

    private class HelloListener implements View.OnClickListener { //ここでスリープボタン画面遷移のプログラム

        int sleepflag=0;    //寝るボタンと起きるボタンの遷移の判定

        //ここで現在時間を取得
        // 現在日時情報で初期化されたインスタンスの生成

        //DatabaseHelper helper = new DatabaseHelper(Mainmenu.this);
        //SQLiteDatabase db = helper.getReadableDatabase();

        AlarmManager am = (AlarmManager) getSystemService(ALARM_SERVICE);

        @Override
        public void onClick(View view) {
            int id = view.getId();

            Date nowtime = new Date();
            SimpleDateFormat format = new SimpleDateFormat( "HH:mm:ss" );
            String display = format.format( nowtime );

            /*
            //時の現在時刻を取得
            SimpleDateFormat nh = new SimpleDateFormat( "HH" );
            String nhh = nh.format( nowtime );
            int nowhour = Integer.parseInt(nhh);

            //分の現在時刻を取得
            SimpleDateFormat nm = new SimpleDateFormat( "mm" );
            String nmm = nm.format( nowtime );
            int nowminute = Integer.parseInt(nmm);

            long nowmill = ((nowhour*60) + nowminute) *10;*/

            //try {
                //ここにsethour,minuteを呼ぶためのdbのコードを書く
                /*String sql = "SELECT * FROM alarmdata WHERE hour = " + _alarmId;
                Cursor cursor = db.rawQuery(sql, null);

                //教科書p247参考
                //cursor.moveToNext();
                while (cursor.moveToNext()){
                    int idxNote = cursor.getColumnIndex("hour");
                    int idxNote1 = cursor.getColumnIndex("min");
                    //int idxNote2 = cursor.getColumnIndex("mill");
                    //int sethour;
                    //int setminute;
                    sethour = cursor.getString(idxNote);
                    setminute = cursor.getString(idxNote1);
                }*/

            switch (id) {
                case R.id.sleep:
                    /*sleepflagが0なら、おやすみ。1ならおはよう*/
                    if (sleepflag == 0) {

                        final Calendar calendar = Calendar.getInstance();

           int hour = calendar.get(Calendar.HOUR_OF_DAY);
           int minute = calendar.get(Calendar.MINUTE);

                        TimePickerDialog dialog = new TimePickerDialog(
                                Mainmenu.this,
                                new TimePickerDialog.OnTimeSetListener() {
                                    //ここでダイアログに時間データをしまってる
                                    @Override
                                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
                                        //完了を押したときの処理

                                        Log.d("test", String.format("%02d:%02d", hourOfDay, minute));



                        //String show = "今から寝るよ！" + System.lineSeparator() + "明日起きる時間は："+  +";
                        String show = "今から寝るよ！" + System.lineSeparator() + "明日起きる時間は"+ sethour + ":" + setminute + "です！";
                        String show2 = "null値ですエラー";//null値を設定してるため
                        Toast.makeText(Mainmenu.this, show, Toast.LENGTH_SHORT).show();
                        TextView output = findViewById(R.id.sleep);
                        output.setText("起きる");
                        sleepflag++;

                        //比較用のミリ秒を取得
                        calendar.setTimeInMillis(System.currentTimeMillis());

                        /*
                        //明示的なBroadCast
                        Intent intent = new Intent(getApplicationContext(),
                                AlarmBroadcastReceiver.class);
                        PendingIntent pending = PendingIntent.getBroadcast(
                                getApplicationContext(), 0, intent, 0);*/


                        //if (sethour == nowhour && setminute == nowminute) {
                        if(am != null){
                            public void timerSet(Calendar calendar){//実行するサービスを指定
                                Intent intent = new Intent(getApplicationContext(), Pleaseworksomething.class);
                            Context ct = getApplication();
                            PendingIntent pendingIntent = PendingIntent.getService(ct, 0,
                                    intent, PendingIntent.FLAG_UPDATE_CURRENT);

                                AlarmManager am = (AlarmManager)getSystemService(Context.ALARM_SERVICE);
                                am.set(AlarmManager.RTC_WAKEUP,calendar.getTimeInMillis(),pendingIntent);
                        }
                            /*am.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), pending);
//                            am.setAlarmClock(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), pending);

                            //CalculateDialog dialog = new CalculateDialog();
                            //dialog.show(getSupportFragmentManager(),"Calculate");
                            //Alarm = soundPool.load(Mainmenu.this, R.raw.alarm1, 1); //Alarmに音源を定義する

                        } else { //現在時刻が指定された時間になったらあらーーーーむを鳴らす
                            Toast.makeText(Mainmenu.this, show2, Toast.LENGTH_SHORT).show();
                        }*/
                    } else if (sleepflag == 1) {
                        soundPool.autoPause();

                        String show = "おはようございます！！" + System.lineSeparator() + "現在時刻は：" + display + "です！";
                        Toast.makeText(Mainmenu.this, show, Toast.LENGTH_LONG).show();
                        TextView output = findViewById(R.id.sleep);
                        output.setText("寝る！！！");
                        sleepflag--;
                    }
                    break;
                case R.id.bt_sleep:
                    Intent intent = new Intent(Mainmenu.this, Sleepchecker.class); //１個目は遷移元、２個目は遷移先
                    startActivity(intent);
                    break;
                case R.id.bt_wakeup:
                    //Intent intent2 = new Intent(Mainmenu.this, Wakeup.class); //１個目は遷移元、２個目は遷移先 dead
                    Intent intent2 = new Intent(Mainmenu.this, notWakeup.class); //１個目は遷移元、２個目は遷移先
                    startActivity(intent2);
                    break;
                case R.id.bt_configs:
                    Intent intent3 = new Intent(Mainmenu.this, Configs.class); //１個目は遷移元、２個目は遷移先
                    startActivity(intent3);
                    break;
                default:
                    throw new IllegalStateException("Unexpected value: " + id);
                }
            /*}finally{
                db.close(); //毎回onClickを押すたびre-openでerrorが発生してしまうし、onDestroyを組み込んでるのでdb.closeを封印する
            }*/
        }
        /*public void onBackButtonClick(View view){
            finish();
        }*/
    }
    protected void onDestroy(){
        super.onDestroy();
        soundPool.release();
        soundPool = null;
        db.close();
        //helper = null;
    }
}
